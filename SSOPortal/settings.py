"""
Django settings for SSOPortal project.
Generated by 'django-admin startproject' using Django 2.2.5.
For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

from decouple import config

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
if os.getenv("GAE_APPLICATION", None):
    # Running on production App Engine
    DEBUG = False
else:
    # Running locally
    DEBUG = True

SESSION_COOKIE_SAMESITE = "Lax"
CSRF_COOKIE_SAMESITE = "Lax"

ALLOWED_HOSTS = [
    "127.0.0.1",
    "localhost",
    "attribution-v1.appspot.com",
    "liveloop.uc.r.appspot.com",
    "liveloop-dev.uc.r.appspot.com",
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    "apps.superuser",
    "apps.login_registration",
    "apps.onboarding",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    "simple_sso.sso_server",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "SSOPortal.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "apps.login_registration.context_processors.ssoclientredirects"
            ],
        },
    },
]

WSGI_APPLICATION = "SSOPortal.wsgi.application"


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
#
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "HOST": config("SSO_DATABASE_URL"),
        "USER": config("SSO_DB_USER"),
        "PASSWORD": config("SSO_DB_PASSWORD"),
        "NAME": config("SSO_DB_NAME"),
        "OPTIONS": {"init_command": "SET sql_mode='STRICT_TRANS_TABLES'",},
    },
    "paretodb": {
        "ENGINE": "django.db.backends.mysql",
        "HOST": config("SSO_DATABASE_URL"),
        "USER": config("SSO_DB_USER"),
        "PASSWORD": config("SSO_DB_PASSWORD"),
        "NAME": "paretodb",
        "OPTIONS": {"init_command": "SET sql_mode='STRICT_TRANS_TABLES'",},
    },
}

DATABASE_ROUTERS = ["apps.onboarding.router.ParetoRouter"]


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",},
]

# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config("EMAIL_USER")
EMAIL_HOST_PASSWORD = config("EMAIL_PASSWORD")

SSO_PRIVATE_KEY = 'private_djangosso@12345'
SSO_PUBLIC_KEY = 'pub_djangosso@12345'
SSO_SERVER = 'https://sso-dev-master.herokuapp.com/server/'
# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/
LIVELOOP_WEBSITE_URL = config("LIVELOOP_WEBSITE_URL")
BUYERSONAR_WEBSITE_URL = config("BUYERSONAR_WEBSITE_URL")
DROPBOX_WEBSITE_URL = config("DROPBOX_WEBSITE_URL")

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# Google App Engine: set static root for local static files
# https://cloud.google.com/appengine/docs/flexible/python/serving-static-files
STATIC_URL = "/static/"

STATIC_ROOT = "static"

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "templates/static"),
]


AUTH_USER_MODEL = "login_registration.User"